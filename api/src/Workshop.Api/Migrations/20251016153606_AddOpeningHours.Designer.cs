// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workshop.Api.Data;

#nullable disable

namespace Workshop.Api.Migrations
{
    [DbContext(typeof(WorkshopDbContext))]
    [Migration("20251016153606_AddOpeningHours")]
    partial class AddOpeningHours
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Workshop.Api.Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street, Downtown",
                            IsActive = true,
                            Name = "Downtown Location"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 North Avenue",
                            IsActive = true,
                            Name = "North Branch"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 East Boulevard",
                            IsActive = true,
                            Name = "East Side Location"
                        });
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.OpeningHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("CloseTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("OpenTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservableObjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReservableObjectId");

                    b.ToTable("OpeningHours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 1,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 20
                        },
                        new
                        {
                            Id = 2,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 2,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 20
                        },
                        new
                        {
                            Id = 3,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 3,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 20
                        },
                        new
                        {
                            Id = 4,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 4,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 20
                        },
                        new
                        {
                            Id = 5,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 5,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 20
                        },
                        new
                        {
                            Id = 6,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 1,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 21
                        },
                        new
                        {
                            Id = 7,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 2,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 21
                        },
                        new
                        {
                            Id = 8,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 3,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 21
                        },
                        new
                        {
                            Id = 9,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 4,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 21
                        },
                        new
                        {
                            Id = 10,
                            CloseTime = new TimeSpan(0, 18, 0, 0, 0),
                            DayOfWeek = 5,
                            OpenTime = new TimeSpan(0, 8, 0, 0, 0),
                            ReservableObjectId = 21
                        });
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.ReservableObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("ReservableObjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Window seat with natural light",
                            IsActive = true,
                            LocationId = 1,
                            Name = "Desk A-101",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Standing desk available",
                            IsActive = true,
                            LocationId = 1,
                            Name = "Desk A-102",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Quiet corner desk",
                            IsActive = true,
                            LocationId = 1,
                            Name = "Desk A-103",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Under maintenance",
                            IsActive = false,
                            LocationId = 1,
                            Name = "Desk A-104",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Near collaboration area",
                            IsActive = true,
                            LocationId = 1,
                            Name = "Desk A-105",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Covered parking",
                            IsActive = true,
                            LocationId = 1,
                            Name = "Parking DT-01",
                            Type = "ParkingSpace"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Ground level",
                            IsActive = true,
                            LocationId = 1,
                            Name = "Parking DT-02",
                            Type = "ParkingSpace"
                        },
                        new
                        {
                            Id = 8,
                            Description = "EV charging available",
                            IsActive = true,
                            LocationId = 1,
                            Name = "Parking DT-03",
                            Type = "ParkingSpace"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Ergonomic chair included",
                            IsActive = true,
                            LocationId = 2,
                            Name = "Desk B-201",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Dual monitor setup",
                            IsActive = true,
                            LocationId = 2,
                            Name = "Desk B-202",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Private booth desk",
                            IsActive = true,
                            LocationId = 2,
                            Name = "Desk B-203",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Open space desk",
                            IsActive = true,
                            LocationId = 2,
                            Name = "Desk B-204",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Outdoor parking",
                            IsActive = true,
                            LocationId = 2,
                            Name = "Parking NB-01",
                            Type = "ParkingSpace"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Covered parking",
                            IsActive = true,
                            LocationId = 2,
                            Name = "Parking NB-02",
                            Type = "ParkingSpace"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Reserved for maintenance vehicle",
                            IsActive = false,
                            LocationId = 2,
                            Name = "Parking NB-03",
                            Type = "ParkingSpace"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Corner office desk",
                            IsActive = true,
                            LocationId = 3,
                            Name = "Desk C-301",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Collaborative workspace",
                            IsActive = true,
                            LocationId = 3,
                            Name = "Desk C-302",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Focus room desk",
                            IsActive = true,
                            LocationId = 3,
                            Name = "Desk C-303",
                            Type = "Desk"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Underground parking",
                            IsActive = true,
                            LocationId = 3,
                            Name = "Parking ES-01",
                            Type = "ParkingSpace"
                        },
                        new
                        {
                            Id = 20,
                            Description = "8-person capacity, video conferencing",
                            IsActive = true,
                            LocationId = 3,
                            Name = "Meeting Room Alpha",
                            Type = "MeetingRoom"
                        },
                        new
                        {
                            Id = 21,
                            Description = "4-person capacity, whiteboard",
                            IsActive = true,
                            LocationId = 3,
                            Name = "Meeting Room Beta",
                            Type = "MeetingRoom"
                        });
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservableObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReservableObjectId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.OpeningHours", b =>
                {
                    b.HasOne("Workshop.Api.Data.Entities.ReservableObject", "ReservableObject")
                        .WithMany("OpeningHours")
                        .HasForeignKey("ReservableObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReservableObject");
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.ReservableObject", b =>
                {
                    b.HasOne("Workshop.Api.Data.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.Reservation", b =>
                {
                    b.HasOne("Workshop.Api.Data.Entities.ReservableObject", "ReservableObject")
                        .WithMany()
                        .HasForeignKey("ReservableObjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReservableObject");
                });

            modelBuilder.Entity("Workshop.Api.Data.Entities.ReservableObject", b =>
                {
                    b.Navigation("OpeningHours");
                });
#pragma warning restore 612, 618
        }
    }
}
